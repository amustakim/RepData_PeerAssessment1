find.package("devtools")
install.packages("devtools")
find.package("devtools")
library(devtools)
find_rtools()
x <- c("a","b","c","d")
for(i in 1:4){
print(x[i])
}
for (i in seq_along(x)){
prting(x[i])
}
for (i in seq_along(x)){
+ print(x[i])}
for (i in seq_along(x)){
print(x[i])
}
for (i in x) { print(i)}
x <- matrix(1:6, 2,3)
for(i in seq_len(nrow(x))) {
for(j in seq_len(ncol(x))) {
print(x[i, j])
}
}
x
count <- 0
while(count < 10) {
print(count)
count <- count + 1
}
z <- 5
while(z >= 3 && z <= 10) {
print(z)
coin <- rbinom(1, 1, 0.5)
if(coin == 1) { ## random walk
z <- z + 1
} else {
z <- z - 1
}
}
rbinom(1,1,0.5)
rbinom(1,1,0.5)
rbinom(1,1,0.5)
rbinom(1,1,0.5)
rbinom(1,1,0.5)
rbinom(1,1,0.5)
rbinom(1,1,0.5)
rbinom(1,1,0.5)
rbinom
help rbinom
r rbinom
?rbinom
help("rbinom")
z <- 5
while(z >= 3 && z <= 10) {
print(z)
coin <- rbinom(1, 1, 0.5)
if(coin == 1) { ## random walk
z <- z + 1
} else {
z <- z - 1
}
}
z <- 5
while(z >= 3 && z <= 10) {
print(z)
coin <- rbinom(1, 1, 0.5)
if(coin == 1) { ## random walk
z <- z + 1
} else {
z <- z - 1
}
}
z <- 5
while(z >= 3 && z <= 10) {
print(z)
coin <- rbinom(1, 1, 0.5)
if(coin == 1) { ## random walk
z <- z + 1
} else {
z <- z - 1
}
}
1e-8
computeEstimate()
x0 <- 1
tol <- 1e-8
repeat {
x1 <- computeEstimate()
if(abs(x1 - x0) < tol) {
break
} else {
x0 <- x1
}
}
formals(rbinom)
formals(sd)
rnorm(100)
sd(rnorm(100))
args(sd)
?lm
formals(lm)
q()
add2 <- function(x, y){
x+y
}
add(3,5)
add2(3,5)
above <- function(x, n){
use <- x > n
x[use]
}
x <- 1:20
above(x, 12)
above <- function(x, n=10){
use <- x > n
x[use]
}
above(10)
above(20)
above <- function(x, n = 10){
use <- x > n
x[use]
}
above(20)
above(20, 10)
above(x)
columnmean <- function(y){
nc <- ncol(y)
means <- numeric(nc)
for (i in 1:nc){
means[i] <- mean(y[,i])
}
means
}
columnmean(airquality)
columnmean <- function(y, removeNA = TRUE){
nc <- ncol(y)
means <- numeric(nc)
for (i in 1:nc){
means[i] <- mean(y[,i], na.rm = removeNA)
}
means
}
columnmean(airquality)
?traceback
?callstack
?callback
?debugger
?call stack
?callstack
?callbk
library(lattice)
state <- data.frame(state.x77, region=state.region)
head(state)
head(state)
head(state.x77)
xplot(Life.Exp ~ Income | region ,data=state,layout=c(4,1))
xyplot(Life.Exp ~ Income | region ,data=state,layout=c(4,1))
library(ggplot2)
intstall.packages("ggplot2")
install.packages("ggplot2")
library(ggplot2)
data(mpg)
?gplot
?qplot
head(mpg)
qplot(displ,hwy,data=mpg)
library(graphics)
library(grDevices)
?par
library(datasets)
airquality
airquality <- transform(airquality, Month=factor(Month))
head(airquality)
boxplot(Ozone~Month, airquality)
boxplot(Ozone~Month, airquality, pch=1)
boxplot(Ozone~Month, airquality, pch=2)
boxplot(Ozone~Month, airquality, pch=3)
boxplot(Ozone~Month, airquality, pch=4)
boxplot(Ozone~Month, airquality, pch=a)
boxplot(Ozone~Month, airquality, pch=1)
boxplot(Ozone~Month, airquality, pch=5)
boxplot(Ozone~Month, airquality, pch=6)
boxplot(Ozone~Month, airquality, pch=6, lty=1)
boxplot(Ozone~Month, airquality, pch=6, lty=2)
boxplot(Ozone~Month, airquality, pch=6, lty=3)
boxplot(Ozone~Month, airquality, pch=6, lty=4)
boxplot(Ozone~Month, airquality, pch=6, lty=1)
boxplot(Ozone~Month, airquality, pch=6, lty=0)
boxplot(Ozone~Month, airquality, pch=6, lty=1)
boxplot(Ozone~Month, airquality, pch=6, lty=1, lwd=1)
boxplot(Ozone~Month, airquality, pch=6, lty=1, lwd=2)
boxplot(Ozone~Month, airquality, pch=6, lty=1, lwd=4)
boxplot(Ozone~Month, airquality, pch=6, lty=1, lwd=1)
boxplot(Ozone~Month, airquality, pch=6, lty=1, lwd=1,col=red)
boxplot(Ozone~Month, airquality, pch=6, lty=1, lwd=1,col=3)
boxplot(Ozone~Month, airquality, pch=6, lty=1, lwd=1,col=rainbow)
boxplot(Ozone~Month, airquality, pch=6, lty=1, lwd=1,col=colors())
boxplot(Ozone~Month, airquality, pch=6, lty=1, lwd=1,col=colors(rainbow))
boxplot(Ozone~Month, airquality, pch=6, lty=1, lwd=1,col="rainbow")
boxplot(Ozone~Month, airquality, pch=6, lty=1, lwd=1,col=c(rainbow))
boxplot(Ozone~Month, airquality, pch=6, lty=1, lwd=1,col='red')
boxplot(Ozone~Month, airquality, pch=6, lty=1, lwd=1,col='rainbow')
boxplot(Ozone~Month, airquality, pch=6, lty=1, lwd=1,col=colors())
boxplot(Ozone~Month, airquality, pch=6, lty=1, lwd=1,col=colors(rainbow))
boxplot(Ozone~Month, airquality, pch=6, lty=1, lwd=1,col=colors())
boxplot(Ozone~Month, airquality, pch=6, lty=1, lwd=1,col=rainbow())
boxplot(Ozone~Month, airquality, pch=6, lty=1, lwd=1,col=rainbow(5))
boxplot(Ozone~Month, airquality, pch=6,  lwd=1,col=rainbow(5))
boxplot(Ozone~Month, airquality, pch=6,  lwd=10,col=rainbow(5))
boxplot(Ozone~Month, airquality, pch=6,  lwd=2,col=rainbow(5))
boxplot(Ozone~Month, airquality, pch=6,  lwd=0,col=rainbow(5))
boxplot(Ozone~Month, airquality, pch=6,  lwd=1,col=rainbow(5))
boxplot(Ozone~Month, airquality, pch=6,  lwd=1,col=rainbow(5), xlab="Months", ylab="Ozone")
par(mfrow=c(2,2))
boxplot(Ozone~Month, airquality, pch=6,  lwd=1,col=rainbow(5), xlab="Months", ylab="Ozone")
par(mfrow=c(1))
par(mfrow=1)
par(mfrow=c(1,1))
boxplot(Ozone~Month, airquality, pch=6,  lwd=1,col=rainbow(5), xlab="Months", ylab="Ozone")
par(mfrow=c(1,2))
boxplot(Ozone~Month, airquality, pch=6,  lwd=1,col=rainbow(5), xlab="Months", ylab="Ozone")
par(mfrow=c(2,1))
boxplot(Ozone~Month, airquality, pch=6,  lwd=1,col=rainbow(5), xlab="Months", ylab="Ozone")
boxplot(Ozone~Month, airquality, pch=6,  lwd=1,col=rainbow(5), xlab="Months", ylab="Ozone")
par(mfrow=c(1,1))
boxplot(Ozone~Month, airquality, pch=6,  lwd=1,col=rainbow(5), xlab="Months", ylab="Ozone")
par(mfcol=c(2,1))
boxplot(Ozone~Month, airquality, pch=6,  lwd=1,col=rainbow(5), xlab="Months", ylab="Ozone")
par(mfcol=c(1,2))
boxplot(Ozone~Month, airquality, pch=6,  lwd=1,col=rainbow(5), xlab="Months", ylab="Ozone")
boxplot(Ozone~Month, airquality, pch=6,  lwd=1,col=rainbow(5), xlab="Months", ylab="Ozone")
par(mfcol=c(1,1))
boxplot(Ozone~Month, airquality, pch=6,  lwd=1,col=rainbow(5), xlab="Months", ylab="Ozone")
?par
?las
par(las=0)
boxplot(Ozone~Month, airquality, pch=6,  lwd=1,col=rainbow(5), xlab="Months", ylab="Ozone")
par(las=1)
boxplot(Ozone~Month, airquality, pch=6,  lwd=1,col=rainbow(5), xlab="Months", ylab="Ozone")
par(las=2)
boxplot(Ozone~Month, airquality, pch=6,  lwd=1,col=rainbow(5), xlab="Months", ylab="Ozone")
par(las=3)
boxplot(Ozone~Month, airquality, pch=6,  lwd=1,col=rainbow(5), xlab="Months", ylab="Ozone")
par(las=4)
par(las=0)
boxplot(Ozone~Month, airquality, pch=6,  lwd=1,col=rainbow(5), xlab="Months", ylab="Ozone")
par(las=1)
boxplot(Ozone~Month, airquality, pch=6,  lwd=1,col=rainbow(5), xlab="Months", ylab="Ozone")
par("lty")
par("col")
par("pch")
par("bg")
par("mar")
par("mfrow")
library(datasets)
with(airquality)
with(airquality, plot(Wind, Ozone))
title(main="Ozone and Wind in New York City")
attach(airquality)
plot(Wind, Ozone, main="Ozone and Wind in New York City")
subset(aiquality, Month==5)
subset(airquality, Month==5)
with(subset(airquality, Month==5), points(Wind,Ozone,col="blue")
)
"Ozone and Wind in New York City"
points(Wind,Ozone,col="blue")
with(subset(airquality, Month==5), points(Wind,Ozone,col="blue"))
plot(Wind, Ozone, main="Ozone and Wind in New York City")
with(subset(airquality, Month==5), points(Wind,Ozone,col="blue"))
with(subset(airquality, Month==5), points(Wind,Ozone,col="blue"), type="n")
with(subset(airquality, Month==5), points(Wind,Ozone,col="blue"))
with(airquality, plot(Wind, Ozone,main="Ozone and Win in New York City", type="n"))
with(subset(airquality, Month==5), points(Wind,Ozone,col="blue"))
with(subset(airquality, Month!=5), points(Wind,Ozone,col="red"))
legend("topright", pch=14,col=c("blue","red"),legend=c("May","Other Months"))
with(airquality, plot(Wind, Ozone,main="Ozone and Win in New York City",pch=20)
)
model <- lm(Ozone~Wind,airquality)
?abline
abline(model,lwd=2)
par("mar")
example(plots)
example(points)
example(points)
?Devices
install.packages("knitr")
setwd("C:/Users/AhmedToshiba/Documents/GitHub/RepData_PeerAssessment1") #Working directory of
activity <- read.csv(unz("activity.zip", "activity.csv"), header=TRUE, na.strings="NA" )
activity <- DF
DF <- activity
"DF$nacount <- is.na(DF$steps)
DF$nacount <- is.na(DF$steps)
View(DF)
melt(tapply(DF$nacount, INDEX=DF$date, FUN=sum, na.rm=TRUE))
?melt
??melt
library(reshape2)
melt(tapply(DF$nacount, INDEX=DF$date, FUN=sum, na.rm=TRUE))
nacount.DF <- melt(tapply(DF$nacount, INDEX=DF$date, FUN=sum, na.rm=TRUE))
View(nacount.DF)
plot(nacount.DF$Var1, nacount.DF$value, type="l")
plot(nacount.DF$Var1, nacount.DF$value, type="l")
?ddply
??dply
ddply(activityComplete[c(1,2)], .(date), colwise(sum) )
activityComplete <- activity[complete.cases(activity),]
ddply(activityComplete[c(1,2)], .(date), colwise(sum) )
library(plyr)
ddply(activityComplete[c(1,2)], .(date), colwise(sum) )
melt(tapply(DF$nacount, INDEX=DF$date, FUN=sum, na.rm=TRUE))
?taply
?tapply
ddply(activityComplete[c(1,2)], .(date), colwise(sum) , na.rm=TRUE)
ddply(activity[c(1,2)], .(date), colwise(sum) , na.rm=TRUE)
table(complete.cases(activity$steps))[c("FALSE")][[1]]
?replace
activityImputed <- ddply(activity[1:3],
.(interval),
transform,
steps = imputeMean(steps),
date = date,
interval = interval)
imputeMean <- function(s) {
replace(s, is.na(s), mean(s, na.rm = TRUE))
}
activityImputed <- ddply(activity[1:3],
.(interval),
transform,
steps = imputeMean(steps),
date = date,
interval = interval)
imputedStepsPerDay <- ddply(activityImputed[c(1,2)],
.(date),
colwise(sum) )
summary(imputedStepsPerDay$steps)[c("Mean","Median")]
?ddply
ddply(activity[1:3],
.(interval, date),
transform,
steps = imputeMean(steps),
interval = interval,
date = date
)
activityImputed <- ddply(activity[1:3], .(interval, date),  transform, steps = imputeMean(steps))
head(activityImputed)
activityImputed <- ddply(activity[1:3], .( date),  transform, steps = imputeMean(steps))
head(activityImputed)
activityImputed <- ddply(activity[1:3],
.(date),
transform,
steps = imputeMean(steps),
interval = interval,
date = date
)
head(activityImputed)
activityImputed <- ddply(activity[1:3],
.(date),
transform,
steps = imputeMean(steps),
date = date,
interval = interval
)
head(activityImputed)
head(ddply(activityComplete[c(1,2)],
.(date),
colwise(sum) ))
head(ddply(activityComplete[c(1,2)],
.(date),
colwise(sum) , na.rm=TRUE))
head(ddply(activity[c(1,2)],
.(date),
colwise(sum) , na.rm=TRUE))
ddply(activityComplete[c(1,2)], .(date), colwise(mean), na.rm=TRUE )
ddply(activity[c(1,2)], .(date), colwise(mean), na.rm=TRUE )
str(activity)
head(weekday(activity$date))
head(weekdays(activity$date))
?weekdays
weekdays("2012-10-01")
weekdays('2012-10-01')
weekdays("2012-10-01". FALSE)
weekdays("2012-10-01", FALSE)
weekdays("2012-10-01")
Day <- seq(as.Date("2013-06-01"), by=1, len=30)
weekdays(Day)
seq(as.Date("2013-06-01"), by=1, len=30)
head(activity$date)
str(Day)
weekdays(activity$date)
weekdays(as.Date(activity$date)
)
activity$weekday <- weekdays(as.Date(activity$date))
head(activity)
str(activity)
head(activity$date %in% weekend)
head(as.Date(activity$date) %in% weekend)
head(as.Date(activity$weekday) %in% "Saturday")
head(as.Date(activity$weekday) %in% 'Saturday')
head(activity$weekday %in% 'Saturday')
head(activity$weekday %in% "Saturday")
head(activity$weekday %in% "Saturday" OR activity$weekday %in% "Saturday")
head(activity$weekday %in% "Saturday" | activity$weekday %in% "Saturday")
head(activity$weekday %in% "Saturday" | activity$weekday %in% "Sunday")
activity[(activity$weekday %in% "Saturday" | activity$weekday %in% "Sunday"),]
activity$dayType[(activity$weekday %in% "Saturday" | activity$weekday %in% "Sunday"),] <- "weekend"
activity$dayType((activity$weekday %in% "Saturday" | activity$weekday %in% "Sunday"),) <- "weekend"
tapply(DF$nacount, INDEX=DF$date, FUN=sum, na.rm=TRUE)
melt(tapply(DF$nacount, INDEX=DF$date, FUN=sum, na.rm=TRUE))
?tapply
list("weekend")
tapply(activity$day, list("weekend"), FUN=NULL, (activity$weekday %in% "Saturday" | activity$weekday %in% "Sunday"))
?apply
?lapply
activity$weekday %in% c("Saturday","Sunday")
head(weekdays(as.Date(activityImputed$date)) )
head(    weekdays(as.Date(activityImputed$date)) in %in% c("Saturday","Sunday") )
head(weekdays(as.Date(activityImputed$date)) %in% c("Saturday","Sunday") )
activity(weekdays(as.Date(activityImputed$date)) %in% c("Saturday","Sunday") )
activity[weekdays(as.Date(activityImputed$date)) %in% c("Saturday","Sunday") ]
activity[weekdays(as.Date(activityImputed$date)) %in% c("Saturday","Sunday") ,]
activity$day[weekdays(as.Date(activityImputed$date)) %in% c("Saturday","Sunday") ,]
activity$day[weekdays(as.Date(activityImputed$date)) %in% c("Saturday","Sunday") ]
activity$day[weekdays(as.Date(activityImputed$date)) !%in% c("Saturday","Sunday") ]
activity$day[,weekdays(as.Date(activityImputed$date)) %in% c("Saturday","Sunday") ]
activity[weekdays(as.Date(activityImputed$date)) %in% c("Saturday","Sunday") ]
activity[weekdays(as.Date(activityImputed$date)) %in% c("Saturday","Sunday") ,]
activity[,weekdays(as.Date(activityImputed$date)) %in% c("Saturday","Sunday") ]
activity[ (weekdays(as.Date(activityImputed$date)) %in% c("Saturday","Sunday")) ]
activity[ which(weekdays(as.Date(activityImputed$date)) %in% c("Saturday","Sunday")) ]
activity[ subset(weekdays(as.Date(activityImputed$date)) %in% c("Saturday","Sunday")) ]
subset(weekdays(as.Date(activityImputed$date)) %in% c("Saturday","Sunday"))
weekdays(as.Date(activityImputed$date)) %in% c("Saturday","Sunday"))
weekdays(as.Date(activityImputed$date)) %in% c("Saturday","Sunday")
melt(weekdays(as.Date(activityImputed$date)) %in% c("Saturday","Sunday"))
subset(weekdays(as.Date(activityImputed$date)) %in% c("Saturday","Sunday"))
replace (weekdays(as.Date(activityImputed$date)) %in% c("Saturday","Sunday") , "TRUE", "weekday")
replace (weekdays(as.Date(activityImputed$date)) %in% c("Saturday","Sunday") , "TRUE", "weekend")
activity(weekdays(as.Date(activityImputed$date)) %in% c("Saturday","Sunday")
)
activityImputed((weekdays(as.Date(activityImputed$date)) %in% c("Saturday","Sunday"))
which((weekdays(as.Date(activityImputed$date)) %in% c("Saturday","Sunday"),)
activityImputed[weekdays(as.Date(activityImputed$date)) %in% c("Saturday","Sunday"),]
activityImputed[weekdays(as.Date(activityImputed$date)) %in% c("Saturday","Sunday"), 3]
activityImputed[weekdays(as.Date(activityImputed$date)) %in% c("Saturday","Sunday"), 4]
activityImputed[weekdays(as.Date(activityImputed$date)) %in% c("Saturday","Sunday"), 2]
head(activityImputed)
activityImputed$day <- "weekdays"
activityImputed[weekdays(as.Date(activityImputed$date)) %in% c("Saturday","Sunday"), 4]
activityImputed[weekdays(as.Date(activityImputed$date)) %in% c("Saturday","Sunday"), 4] <- "weekend"
head(activityImputed,500)
str(activityImputed)
activityImputed$day <- as.factor(activityImputed$day)
str(activityImputed)
head(activityImputed)
averageWDSteps <- ddply(activityImputed[c(1,3)],
.(interval, day),
colwise(mean),
na.rm=TRUE )
averageWDSteps <- ddply(activityImputed[c(1,3,4)],
.(interval, day),
colwise(mean),
na.rm=TRUE )
head(averageWDSteps)
nrow(averageWDSteps)
xyplot(steps ~ interval | day, layout=c(1,2), data = averageWDSteps)
library(lattice)
xyplot(steps ~ interval | day, layout=c(1,2), data = averageWDSteps)
xyplot(steps ~ interval | day, layout=c(1,2), data = averageWDSteps, type="l")
xyplot(steps ~ interval | day, layout=c(1,2), data = averageWDSteps, type="l", ylab="Number of steps")
